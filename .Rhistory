autoplot()
google_2018 |>
autoplot(difference(Close))+
labs(y="Change in google closing stock price ($USD)")
google_2018 |>
ACF(difference(Close))|>
autoplot()
PBS |>
filter(ATC2 == "H02") |>
summarise(Cost = sum(Cost)/1e6) |>
transmute(
`Sales ($million)` = Cost,
`Log sales` = log(Cost),
`Annual change in log sales` = difference(log(Cost), 12),
`Doubly differenced log sales` =
difference(difference(log(Cost), 12), 1)
) |>
pivot_longer(-Month, names_to="Type", values_to="Sales") |>
mutate(
Type = factor(Type, levels = c(
"Sales ($million)",
"Log sales",
"Annual change in log sales",
"Doubly differenced log sales"))
) |>
ggplot(aes(x = Month, y = Sales)) +
geom_line() +
facet_grid(vars(Type), scales = "free_y") +
labs(title = "Corticosteroid drug sales", y = NULL)
google_2018 %>%
features(Close,unitroot_kpss)
google_2018 %>%
features(Close, unitroot_ndiffs)
h02 %>% mutate(log_sales=log(Cost)) %>%
features(log_sales,feat_stl)
h02 %>% mutate(log_sales=log(Cost)) %>%
features(log_sales,unitroot_nsdiffs)
h02 %>% mutate(d_log_sales=difference(log(Cost),12)) %>%
features(d_log_sales,unitroot_ndiffs)
google_2015 |>
features(Close, unitroot_kpss)
#> # A tibble: 1 × 3
#>   Symbol kpss_stat kpss_pvalue
#>   <chr>      <dbl>       <dbl>
#> 1 GOOG        3.56        0.01
google_2015 |>
mutate(diff_close = difference(Close)) |>
features(diff_close, unitroot_kpss)
#> # A tibble: 1 × 3
#>   Symbol kpss_stat kpss_pvalue
#>   <chr>      <dbl>       <dbl>
#> 1 GOOG      0.0989         0.1
google_2015 |>
features(Close, unitroot_ndiffs)
#> # A tibble: 1 × 2
#>   Symbol ndiffs
#>   <chr>   <int>
#> 1 GOOG        1
aus_total_retail <- aus_retail |>
summarise(Turnover = sum(Turnover))
aus_total_retail |>
mutate(log_turnover = log(Turnover)) |>
features(log_turnover, unitroot_nsdiffs)
#> # A tibble: 1 × 1
#>   nsdiffs
#>     <int>
#> 1       1
aus_total_retail |>
mutate(log_turnover = difference(log(Turnover), 12)) |>
features(log_turnover, unitroot_ndiffs)
#> # A tibble: 1 × 1
#>   ndiffs
#>    <int>
#> 1      1
global_economy |>
filter(Code == "EGY") |>
autoplot(Exports) +
labs(y= "% of GDP", title = "Egyptian Exports")
fit <- global_economy |>
filter(Code == "EGY") |>
model(ARIMA(Exports))
report(fit)
gg_tsresiduals(fit)
fit |>
forecast(h=10) |>
autoplot(global_economy)+
labs(y="% of GDP", title = "Egyptian Exports")
egypt <- global_economy |> filter(Code == "EGY")
egypt |> ACF(Exports) |> autoplot()
egypt |> PACF(Exports) |> autoplot()
library(fpp3)
egypt <- global_economy |>
filter(Code =="EGY")
fit <- egypt |>
model(
ar4 = ARIMA(Exports ~ pdq(p=4,d=0,q=0)),
auto=ARIMA(Exports)
)
glance(fit)
global_economy |>
filter(Code =="EGY") |>
gg_tsdisplay(Exports, plot_type = "partial")
global_economy |>
filter(Code == "CAF")|>
autoplot(Exports) +
labs(title = "Central African Republic exports", y="% of GDP")
global_economy |>
filter(Code=="CAF") |>
gg_tsdisplay(difference(Exports),plot_type = "partial")
caf_fit <- global_economy |>
filter(Code == "CAF") |>
model(
arima210 = ARIMA(Exports ~ pdq(2,1,0)),
arima013 = ARIMA(Exports ~ pdq(0,1,3)),
stepwise = ARIMA(Exports),
search = ARIMA(Exports,stepwise = FALSE),
)
caf_fit |> pivot_longer(!Country,
names_to = "Model name",
values_to="Orders"
)
glance(caf_fit) |>
arrange(AICc) |>
select(.model:BIC)
caf_fit |>
select(search) |>
gg_tsresiduals()
augment(caf_fit) |>
filter(.model == "search") |>
features(.innov,ljung_box,lag=10,dof=3)
caf_fit |>
forecast(h=5)|>
filter(.model == "search") |>
autoplot(global_economy)
global_economy |>
filter(Code == "CAF") |>
autoplot(Exports) +
labs(title="Central African Republic exports",
y="% of GDP")
global_economy |>
filter(Code == "CAF") |>
gg_tsdisplay(difference(Exports), plot_type='partial')
caf_fit <- global_economy |>
filter(Code == "CAF") |>
model(arima210 = ARIMA(Exports ~ pdq(2,1,0)),
arima013 = ARIMA(Exports ~ pdq(0,1,3)),
stepwise = ARIMA(Exports),
search = ARIMA(Exports, stepwise=FALSE))
caf_fit |> pivot_longer(!Country, names_to = "Model name",
values_to = "Orders")
#> # A mable: 4 x 3
#> # Key:     Country, Model name [4]
#>   Country                  `Model name`         Orders
#>   <fct>                    <chr>               <model>
#> 1 Central African Republic arima210     <ARIMA(2,1,0)>
#> 2 Central African Republic arima013     <ARIMA(0,1,3)>
#> 3 Central African Republic stepwise     <ARIMA(2,1,2)>
#> 4 Central African Republic search       <ARIMA(3,1,0)>
glance(caf_fit) |> arrange(AICc) |> select(.model:BIC)
#> # A tibble: 4 × 6
#>   .model   sigma2 log_lik   AIC  AICc   BIC
#>   <chr>     <dbl>   <dbl> <dbl> <dbl> <dbl>
#> 1 search     6.52   -133.  274.  275.  282.
#> 2 arima210   6.71   -134.  275.  275.  281.
#> 3 arima013   6.54   -133.  274.  275.  282.
#> 4 stepwise   6.42   -132.  274.  275.  284.
caf_fit |>
select(search) |>
gg_tsresiduals()
augment(caf_fit) |>
filter(.model=='search') |>
features(.innov, ljung_box, lag = 10, dof = 3)
#> # A tibble: 1 × 4
#>   Country                  .model lb_stat lb_pvalue
#>   <fct>                    <chr>    <dbl>     <dbl>
#> 1 Central African Republic search    5.75     0.569
caf_fit |>
forecast(h=5) |>
filter(.model=='search') |>
autoplot(global_economy)
gg_arma(caf_fit |> select(Country, search))
leisure <- us_employment |>
filter(Title=="Leisure and Hospitality", year(Month)>2000) |>
mutate(Employed = Employed/1000) |>
select(Month,Employed)
autoplot(leisure,Employed)+
labs(title = "US employment: leisure and hospitality",y="People (millions)")
leisure |>
gg_tsdisplay(difference(Employed,12),plot_type = "partial",lag=36)+
labs(title="Seasonality differenced",y="")
leisure |>
gg_tsdisplay(difference(Employed,12) |> difference(),
plot_type = "partial",lag=36)+
labs(title = "Double Differenced", y ="")
fit <- leisure |>
model(
arima012011 = ARIMA(Employed ~ pdq(0,1,2) + PDQ(0,1,1)),
arima210011 = ARIMA(Employed ~ pdq(2,1,0) + PDQ(0,1,1)),
auto = ARIMA(Employed, stepwise = FALSE, approx=FALSE)
)
fit |>
pivot_longer(everything(),
names_to = "model name",
values_to="Orders")
glance(fit) |>
arrange(AICc) |>
select(.model:BIC)
fit |>
select(auto) |>
gg_tsresiduals(lag=36)
augment(fit) |>
filter(.model == "auto") |>
features(.innov, ljung_box,lag =24, dof = 4)
forecast(fit, h=36) |>
filter(.model == "auto") |>
autoplot(leisure) +
labs(title = "US employment: leisure and hospitality", y = "People (in millions)")
h02 <- PBS |>
filter(ATC2 =="H02") |>
summarise(Cost = sum(Cost)/1e6)
h02 |> autoplot(Cost)
h02 |> autoplot(log(Cost))
h02 |> autoplot(log(Cost) |> difference(12))
h02 |> gg_tsdisplay(difference(log(Cost),12), lag_max = 36, plot_type = "partial")
fit <- h02 |>
model(best=ARIMA(log(Cost) ~ 0 + pdq(3,0,1) + PDQ(0,1,2)))
report(fit)
gg_tsresiduals(fit)
augment(fit) |>
features(.innov, ljung_box, lag=36, dof = 6)
fir <- h02 |> model(
auto = ARIMA(log(Cost))
)
report(fit)
fit <- h02 |> model(
auto = ARIMA(log(Cost))
)
report(fit)
gg_tsresiduals(fit)
augment(fit) |>
features(.innov, ljung_box,lag =36, dof=3)
fit <- h02 |>
model(best = ARIMA(log(Cost),
stepwise = FALSE, approximation = FALSE,
order_constraint = P+q+P+Q<=9))
report(fit)
gg_tsresiduals(fit)
augment(fit) |>
features(.innov, ljung_box,lag=36,dof=9)
fit <- h02 |>
filter_index(~ "2006 Jun") |>
model(
ARIMA(log(Cost) ~ 0 + pdq(3,0,0) + PDQ(2,1,0)),
ARIMA(log(Cost) ~ 0 + pdq(3,0,1) + PDQ(2,1,0)),
ARIMA(log(Cost) ~ 0 + pdq(3,0,2) + PDQ(2,1,0)),
ARIMA(log(Cost) ~ 0 + pdq(3,0,1) + PDQ(1,1,0))
# ... #
)
fit |>
forecast(h="2 years") |>
accuracy(h02)
fit <- h02 |>
model(ARIMA(Cost ~ 0 + pdq(3,0,1) + PDQ(0,1,2)))
fit |>
forecast() |>
autoplot(h02) +labs(y="H02 Expenditure ($AUD)")
leisure <- us_employment |>
filter(Title == "Leisure and Hospitality",
year(Month) > 2000) |>
mutate(Employed = Employed/1000) |>
select(Month, Employed)
autoplot(leisure, Employed) +
labs(title = "US employment: leisure and hospitality",
y="Number of people (millions)")
leisure |>
gg_tsdisplay(difference(Employed, 12),
plot_type='partial', lag=36) +
labs(title="Seasonally differenced", y="")
leisure |>
gg_tsdisplay(difference(Employed, 12) |> difference(),
plot_type='partial', lag=36) +
labs(title = "Double differenced", y="")
fit <- leisure |>
model(
arima012011 = ARIMA(Employed ~ pdq(0,1,2) + PDQ(0,1,1)),
arima210011 = ARIMA(Employed ~ pdq(2,1,0) + PDQ(0,1,1)),
auto = ARIMA(Employed, stepwise = FALSE, approx = FALSE)
)
fit |> pivot_longer(everything(), names_to = "Model name",
values_to = "Orders")
#> # A mable: 3 x 2
#> # Key:     Model name [3]
#>   `Model name`                    Orders
#>   <chr>                          <model>
#> 1 arima012011  <ARIMA(0,1,2)(0,1,1)[12]>
#> 2 arima210011  <ARIMA(2,1,0)(0,1,1)[12]>
#> 3 auto         <ARIMA(2,1,0)(1,1,1)[12]>
glance(fit) |> arrange(AICc) |> select(.model:BIC)
#> # A tibble: 3 × 6
#>   .model       sigma2 log_lik   AIC  AICc   BIC
#>   <chr>         <dbl>   <dbl> <dbl> <dbl> <dbl>
#> 1 auto        0.00142    395. -780. -780. -763.
#> 2 arima210011 0.00145    392. -776. -776. -763.
#> 3 arima012011 0.00146    391. -775. -775. -761.
fit |> select(auto) |> gg_tsresiduals(lag=36)
augment(fit) |>
filter(.model == "auto") |>
features(.innov, ljung_box, lag=24, dof=4)
#> # A tibble: 1 × 3
#>   .model lb_stat lb_pvalue
#>   <chr>    <dbl>     <dbl>
#> 1 auto      16.6     0.680
forecast(fit, h=36) |>
filter(.model=='auto') |>
autoplot(leisure) +
labs(title = "US employment: leisure and hospitality",
y="Number of people (millions)")
h02 <- PBS |>
filter(ATC2 == "H02") |>
summarise(Cost = sum(Cost)/1e6)
h02 |>
mutate(log(Cost)) |>
pivot_longer(-Month) |>
ggplot(aes(x = Month, y = value)) +
geom_line() +
facet_grid(name ~ ., scales = "free_y") +
labs(y="", title="Corticosteroid drug scripts (H02)")
h02 |> gg_tsdisplay(difference(log(Cost), 12),
plot_type='partial', lag_max = 24)
fit <- h02 |>
model(ARIMA(log(Cost) ~ 0 + pdq(3,0,1) + PDQ(0,1,2)))
fit |> gg_tsresiduals(lag_max=36)
augment(fit) |>
features(.innov, ljung_box, lag = 36, dof = 6)
#> # A tibble: 1 × 3
#>   .model                                             lb_stat lb_pvalue
#>   <chr>                                                <dbl>     <dbl>
#> 1 ARIMA(log(Cost) ~ 0 + pdq(3, 0, 1) + PDQ(0, 1, 2))    50.7    0.0104
h02 |>
model(ARIMA(log(Cost) ~ 0 + pdq(3,0,1) + PDQ(0,1,2))) |>
forecast() |>
autoplot(h02) +
labs(y=" $AU (millions)",
title="Corticosteroid drug scripts (H02) sales")
aus_economy <- global_economy  |>
filter(Code == "AUS") |>
mutate(Population=Population/1e6)
aus_economy |>
slice(-n()) |>
stretch_tsibble(.init = 10) |>
model(ets=ETS(population), arima= ARIMA(population)) |>
forecast(h=1) |>
accuracy(aus_economy) |>
select(.model,ME:RMSSE)
aus_economy <- global_economy  |>
filter(Code == "AUS") |>
mutate(Population=Population/1e6)
aus_economy |>
slice(-n()) |>
stretch_tsibble(.init = 10) |>
model(ets=ETS(Population), arima= ARIMA(Population)) |>
forecast(h=1) |>
accuracy(aus_economy) |>
select(.model,ME:RMSSE)
aus_economy |>
model(ETS(Population)) |>
forecast(h = "5 years") |>
autoplot(aus_economy) +
labs(title = "Australian Population", y = "People (Millions)")
cement <- aus_production |>
select(Cement) |>
filter_index("1998 Q1" ~ .)
train <- cement |> filter_index(. ~ "2007 Q4" )
fit <- train |>
model(
arima = ARIMA(cement),
ets= ETS(cement)
)
cement <- aus_production |>
select(cement) |>
filter_index("1998 Q1" ~ .)
Cement <- aus_production |>
select(Cement) |>
filter_index("1998 Q1" ~ .)
train <- Cement |> filter_index(. ~ "2007 Q4" )
fit <- train |>
model(
arima = ARIMA(Cement),
ets= ETS(Cement)
)
fit |>
select(arima) |>
report()
fit |>
select(ets) |>
report()
gg_tsresiduals(fit | select(arima), lag_max= 16)
gg_tsresiduals(fit |> select(arima), lag_max= 16)
gg_tsresiduals(fit |> select(ets), lag_max= 16)
fit |>
select(arima) |>
augment() |>
features(.innov, ljung_box,lag=16,dof=6)
fit |>
select(ets) |>
augment() |>
features(.innov, ljung_box,lag=16)
fit |>
forecast(h="2 years 6 months") |>
accuracy(cement) |>
select(-ME,-MPE,-ACF1)
fit |>
select(arima)  |>
forecast(h= "3 years") |>
autoplot(cement) +
labs(title = "Cement Production in Australia", y = "Tonnes ('000)")
aus_economy <- global_economy |>
filter(Code == "AUS") |>
mutate(Population = Population/1e6)
aus_economy |>
slice(-n()) |>
stretch_tsibble(.init = 10) |>
model(
ETS(Population),
ARIMA(Population)
) |>
forecast(h = 1) |>
accuracy(aus_economy) |>
select(.model, RMSE:MAPE)
#> # A tibble: 2 × 5
#>   .model              RMSE    MAE   MPE  MAPE
#>   <chr>              <dbl>  <dbl> <dbl> <dbl>
#> 1 ARIMA(Population) 0.194  0.0789 0.277 0.509
#> 2 ETS(Population)   0.0774 0.0543 0.112 0.327
aus_economy |>
model(ETS(Population)) |>
forecast(h = "5 years") |>
autoplot(aus_economy |> filter(Year >= 2000)) +
labs(title = "Australian population",
y = "People (millions)")
cement <- aus_production |>
select(Cement) |>
filter_index("1988 Q1" ~ .)
train <- cement |> filter_index(. ~ "2007 Q4")
cement <- aus_production |>
select(Cement) |>
filter_index("1988 Q1" ~ .)
train <- cement |> filter_index(. ~ "2007 Q4")
fit_arima <- train |> model(ARIMA(Cement))
report(fit_arima)
#> Series: Cement
#> Model: ARIMA(1,0,1)(2,1,1)[4] w/ drift
#>
#> Coefficients:
#>          ar1      ma1   sar1     sar2     sma1  constant
#>       0.8886  -0.2366  0.081  -0.2345  -0.8979     5.388
#> s.e.  0.0842   0.1334  0.157   0.1392   0.1780     1.484
#>
#> sigma^2 estimated as 11456:  log likelihood=-463.5
#> AIC=941   AICc=942.7   BIC=957.4
fit_arima |> gg_tsresiduals(lag_max = 16)
augment(fit_arima) |>
features(.innov, ljung_box, lag = 16, dof = 5)
#> # A tibble: 1 × 3
#>   .model        lb_stat lb_pvalue
#>   <chr>           <dbl>     <dbl>
#> 1 ARIMA(Cement)    6.37     0.847
fit_ets <- train |> model(ETS(Cement))
report(fit_ets)
#> Series: Cement
#> Model: ETS(M,N,M)
#>   Smoothing parameters:
#>     alpha = 0.7534
#>     gamma = 1e-04
#>
#>   Initial states:
#>  l[0]  s[0] s[-1] s[-2]  s[-3]
#>  1695 1.031 1.045 1.011 0.9122
#>
#>   sigma^2:  0.0034
#>
#>  AIC AICc  BIC
#> 1104 1106 1121
fit_ets |>
gg_tsresiduals(lag_max = 16)
augment(fit_ets) |>
features(.innov, ljung_box, lag = 16)
#> # A tibble: 1 × 3
#>   .model      lb_stat lb_pvalue
#>   <chr>         <dbl>     <dbl>
#> 1 ETS(Cement)    10.0     0.865
# Generate forecasts and compare accuracy over the test set
bind_rows(
fit_arima |> accuracy(),
fit_ets |> accuracy(),
fit_arima |> forecast(h = 10) |> accuracy(cement),
fit_ets |> forecast(h = 10) |> accuracy(cement)
) |>
select(-ME, -MPE, -ACF1)
#> # A tibble: 4 × 7
#>   .model        .type     RMSE   MAE  MAPE  MASE RMSSE
#>   <chr>         <chr>    <dbl> <dbl> <dbl> <dbl> <dbl>
#> 1 ARIMA(Cement) Training  100.  79.9  4.37 0.546 0.582
#> 2 ETS(Cement)   Training  103.  80.0  4.41 0.547 0.596
#> 3 ARIMA(Cement) Test      216. 186.   8.68 1.27  1.26
#> 4 ETS(Cement)   Test      222. 191.   8.85 1.30  1.29
cement |>
model(ARIMA(Cement)) |>
forecast(h="3 years") |>
autoplot(cement) +
labs(title = "Cement production in Australia",
y = "Tonnes ('000)")
